﻿@using PagedList;
@using PagedList.Mvc;
@model IPagedList<ContactMySQL.Models.ToiawaseRireki>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

<p>
    <input class="form-control datepicker input-sm text-box" data-val="true" data-val-date="フィールド 処理日 は日付である必要があります。" id="Shoribi" name="Shoribi" type="date" value="">
    <input type="date" class="input-sm">
</p>

@using (Html.BeginForm("Index", "toiawaseRirekis", FormMethod.Get))
{
    <div>
        @Html.Hidden("page", 1 as int?)
        @Html.TextBox("filterSpanStart", DateTime.Today.ToString("yyyy-MM-dd"), htmlAttributes: new { @class = "input-sm datepicker", type = "Date" })
        @Html.Editor("filterSpanEnd", ViewBag.filterSpanEnd as string, new { htmlAttributes = new { @class = "input-sm datepicker", type = "Date", value = DateTime.Today } } )

    </div>
    <div>
        @*@Html.DropDownList("filterTarget", ViewBag.filterTargetList as SelectList) 検索: @Html.TextBox("filterText", ViewBag.filterText as string)*@
        <input type="submit" value="検索" />
    </div>
   }


<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Shoribi)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().TantoshaId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().UserId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().UserTantoshaMei)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().SystemId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().BunruiId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().ShoriJikan)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().JyuyodoId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Naiyo)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Taio)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Kanryobi)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().UketsukeshaMei)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Toiawasesaki)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Shoribi)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TantoshaId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UserId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UserTantoshaMei)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SystemId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BunruiId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ShoriJikan)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.JyuyodoId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Naiyo)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Taio)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Kanryobi)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UketsukeshaMei)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Toiawasesaki)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>
        </tr>
    }

</table>

@Html.PagedListPager(Model, p => Url.Action("Index", new { page = p, filterTarget = ViewBag.filterTarget, filterText = ViewBag.filterText }))